---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: agentendpoints.ngrok.k8s.ngrok.com
spec:
  group: ngrok.k8s.ngrok.com
  names:
    kind: AgentEndpoint
    listKind: AgentEndpointList
    plural: agentendpoints
    shortNames:
    - aep
    singular: agentendpoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.url
      name: URL
      type: string
    - jsonPath: .spec.upstream.url
      name: Upstream URL
      type: string
    - jsonPath: .spec.bindings
      name: Bindings
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AgentEndpoint is the Schema for the agentendpoints API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AgentEndpointSpec defines the desired state of an AgentEndpoint
            properties:
              bindings:
                description: |-
                  List of Binding IDs to associate with the endpoint
                  Accepted values are "public", "internal", or "kubernetes"
                items:
                  type: string
                type: array
              clientCertificateRefs:
                description: List of client certificates to present to the upstream
                  when performing a TLS handshake
                items:
                  properties:
                    name:
                      description: The name of the Kubernetes resource being referenced
                      type: string
                    namespace:
                      description: The namespace of the Kubernetes resource being
                        referenced
                      type: string
                  required:
                  - name
                  type: object
                type: array
              description:
                default: Created by the ngrok-operator
                description: Human-readable description of this agent endpoint
                type: string
              metadata:
                default: '{"owned-by":"ngrok-operator"}'
                description: String of arbitrary data associated with the object in
                  the ngrok API/Dashboard
                type: string
              trafficPolicy:
                description: |-
                  Allows configuring a TrafficPolicy to be used with this AgentEndpoint
                  When configured, the traffic policy is provided inline or as a reference to an NgrokTrafficPolicy resource
                properties:
                  inline:
                    description: |-
                      Inline definition of a TrafficPolicy to attach to the agent Endpoint
                      The raw JSON-encoded policy that was applied to the ngrok API
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  targetRef:
                    description: Reference to a TrafficPolicy resource to attach to
                      the Agent Endpoint
                    properties:
                      name:
                        description: The name of the Kubernetes resource being referenced
                        type: string
                    required:
                    - name
                    type: object
                type: object
                x-kubernetes-validations:
                - message: targetRef or inline must be provided to trafficPolicy
                  rule: has(self.inline) || has(self.targetRef)
                - message: Only one of inline and targetRef can be configured for
                    trafficPolicy
                  rule: has(self.inline) != has(self.targetRef)
              upstream:
                description: Defines the destination for traffic to this AgentEndpoint
                properties:
                  protocol:
                    description: |-
                      Specifies the protocol to use when connecting to the upstream. Currently only http1 and http2 are supported
                      with prior knowledge (defaulting to http1). alpn negotiation is not currently supported.
                    enum:
                    - http1
                    - http2
                    type: string
                  proxyProtocolVersion:
                    description: Optionally specify the version of proxy protocol
                      to use if the upstream requires it
                    enum:
                    - 1
                    - 2
                    type: string
                  url:
                    description: |-
                      The local or remote address you would like to incoming traffic to be forwarded to. Accepted formats are:
                      Origin - https://example.org or http://example.org:80 or tcp://127.0.0.1:80
                          When using the origin format you are defining the protocol, domain and port.
                              When no port is present and scheme is https or http the port will be inferred.
                                  For https port will be443.
                                  For http port will be 80.
                      Domain - example.org
                          This is only allowed for https and http endpoints.
                              For tcp and tls endpoints host and port is required.
                          When using the domain format you are only defining the host.
                              Scheme will default to http.
                              Port will default to 80.
                      Scheme (shorthand) - https://
                          This only works for https and http.
                              For tcp and tls host and port is required.
                          When using scheme you are defining the protocol and the port will be inferred on the local host.
                              For https port will be443.
                              For http port will be 80.
                              Host will be localhost.
                      Port (shorthand) - 8080
                          When using port you are defining the port on the local host that will receive traffic.
                              Scheme will default to http.
                              Host will default to localhost.
                    type: string
                required:
                - url
                type: object
              url:
                description: |-
                  The unique URL for this agent endpoint. This URL is the public address. The following formats are accepted
                  Domain - example.org
                      When using the domain format you are only defining the domain. The scheme and port will be inferred.
                  Origin - https://example.ngrok.app or https://example.ngrok.app:443 or tcp://1.tcp.ngrok.io:12345 or tls://example.ngrok.app
                      When using the origin format you are defining the protocol, domain and port. HTTP endpoints accept ports 80 or 443 with respective protocol.
                  Scheme (shorthand) - https:// or tcp:// or tls:// or http://
                      When using scheme you are defining the protocol and will receive back a randomly assigned ngrok address.
                  Empty - ``
                      When empty your endpoint will default to be https and receive back a randomly assigned ngrok address.
                  Internal - some.domain.internal
                      When ending your url with .internal, an internal endpoint will be created. nternal Endpoints cannot be accessed directly, but rather
                      can only be accessed using the forward-internal traffic policy action.
                type: string
            required:
            - upstream
            - url
            type: object
          status:
            description: AgentEndpointStatus defines the observed state of an AgentEndpoint
            properties:
              assignedURL:
                description: |-
                  The assigned URL. This will either be the user-supplied url, or the generated assigned url
                  depending on the configuration of spec.url
                type: string
              conditions:
                description: Conditions describe the current conditions of the AgentEndpoint.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              trafficPolicy:
                description: Identifies any traffic policies attached to the AgentEndpoint
                  ("inline", "none", or reference name).
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
