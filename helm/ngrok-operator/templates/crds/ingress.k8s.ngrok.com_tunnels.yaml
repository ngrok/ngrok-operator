---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: tunnels.ingress.k8s.ngrok.com
spec:
  group: ingress.k8s.ngrok.com
  names:
    kind: Tunnel
    listKind: TunnelList
    plural: tunnels
    singular: tunnel
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Service/port to forward to
      jsonPath: .spec.forwardsTo
      name: ForwardsTo
      type: string
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    deprecationWarning: Tunnel is deprecated and will be removed in a future release.
      Please migrate to AgentEndpoint instead. See https://github.com/ngrok/ngrok-operator/discussions/654
      for more information.
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Tunnel is the Schema for the tunnels API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TunnelSpec defines the desired state of Tunnel
            properties:
              appProtocol:
                description: |-
                  Specifies the protocol to use when connecting to the backend. Currently only http1 and http2 are supported
                  with prior knowledge (defaulting to http1).
                enum:
                - http1
                - http2
                type: string
              backend:
                description: The configuration for backend connections to services
                properties:
                  protocol:
                    type: string
                type: object
              forwardsTo:
                description: ForwardsTo is the name and port of the service to forward
                  traffic to
                type: string
              labels:
                additionalProperties:
                  type: string
                description: Labels are key/value pairs that are attached to the tunnel
                type: object
            type: object
          status:
            description: TunnelStatus defines the observed state of Tunnel
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
