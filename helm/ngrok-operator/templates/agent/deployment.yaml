{{- if and .Values.ingress.enabled (not .Values.oneClickDemoMode) }}
{{- $component := "agent" }}
{{- $rbacChecksum := include (print $.Template.BasePath "/agent/rbac.yaml") . | sha256sum }}
{{- $agent := .Values.agent }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "ngrok-operator.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $component }}
  name: {{ include "ngrok-operator.fullname" . }}-agent
  namespace: {{ .Release.Namespace }}
  annotations:
    checksum/rbac: {{ $rbacChecksum }}
spec:
  replicas: {{ $agent.replicaCount }}
  selector:
    matchLabels:
      {{- include "ngrok-operator.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ $component }}
  template:
    metadata:
      annotations:
        {{- if .Values.podAnnotations }}
          {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
        prometheus.io/path: /metrics
        prometheus.io/port: '8080'
        prometheus.io/scrape: 'true'
        checksum/rbac: {{ $rbacChecksum }}
      labels:
        {{- include "ngrok-operator.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
          {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
        app.kubernetes.io/component: {{ $component }}
    spec:
      {{- if $agent.priorityClassName }}
      priorityClassName: {{ $agent.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "component" $component "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "component" $component "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- with $agent.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{ with $agent.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $agent.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "ngrok-operator.agent.serviceAccountName" . }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.image.pullSecrets | nindent 8 }}
      {{- end }}
      containers:
      - name: agent
        image: {{ include "ngrok-operator.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /agent-manager
        args:
        {{- include "ngrok-operator.manager.cliFeatureFlags" . | nindent 8 }}
        {{- if .Values.description }}
        - --description={{ .Values.description | quote }}
        {{- end }}
        {{- if .Values.region }}
        - --region={{ .Values.region }}
        {{- end }}
        {{- if .Values.rootCAs }}
        - --root-cas={{ .Values.rootCAs }}
        {{- end }}
        {{- if .Values.serverAddr }}
        - --server-addr={{ .Values.serverAddr }}
        {{- end }}
        - --zap-log-level={{ .Values.log.level }}
        - --zap-stacktrace-level={{ .Values.log.stacktraceLevel }}
        - --zap-encoder={{ .Values.log.format }}
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8080
        - --manager-name={{ include "ngrok-operator.fullname" . }}-agent-manager
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: NGROK_AUTHTOKEN
          valueFrom:
            secretKeyRef:
              key: AUTHTOKEN
              name: {{ include "ngrok-operator.credentialsSecretName" . }}
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: HELM_RELEASE_NAME
          value: {{ .Release.Name | quote }}
        {{- range $key, $value := .Values.extraEnv }}
        - name: {{ $key }}
          value: {{- toYaml $value | nindent 12 }}
        {{- end }}
        {{- if .Values.extraVolumeMounts  }}
        volumeMounts:
        {{ toYaml .Values.extraVolumeMounts | nindent 10 }}
        {{- end }}
        {{- if .Values.lifecycle }}
        lifecycle:
        {{ toYaml .Values.lifecycle | nindent 10 }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
        {{- toYaml .Values.resources | nindent 10 }}
      {{- if .Values.extraVolumes }}
      volumes:
        {{ toYaml .Values.extraVolumes | nindent 6 }}
      {{- end }}
{{- end }}
