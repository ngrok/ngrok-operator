# Gateways without the mapping-strategy annotation should default to endpoints instead of edges
# The default mapping strategy should collapse it into AgentEndpoints
input:
  gatewayClasses:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: GatewayClass
    metadata:
      name: ngrok
    spec:
      controllerName: ngrok.com/gateway-controller
  gateways:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: Gateway
    metadata:
      name: test-gateway
      namespace: default
    spec:
      gatewayClassName: ngrok
      listeners:
        - name: test-hostname
          hostname: "test-hostname.ngrok.io"
          port: 443
          protocol: HTTPS
  httpRoutes:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: HTTPRoute
    metadata:
      name: test-route
      namespace: default
    spec:
      hostnames:
      - test-hostname.ngrok.io
      parentRefs:
      - group: gateway.networking.k8s.io
        kind: Gateway
        name: test-gateway
        namespace: default
      rules:
      - matches:
          - path:
              type: PathPrefix
              value: /test-service-1
        backendRefs:
          - group: ""
            kind: Service
            name: test-service-1
            port: 8080
            weight: 1
  - apiVersion: gateway.networking.k8s.io/v1
    kind: HTTPRoute
    metadata:
      name: test-route-2
      namespace: default
    spec:
      hostnames:
      - test-hostname.ngrok.io
      parentRefs:
      - group: gateway.networking.k8s.io
        kind: Gateway
        name: test-gateway
        namespace: default
      rules:
      - matches:
          - path:
              type: PathPrefix
              value: /service1
        backendRefs:
          - group: ""
            kind: Service
            name: test-service-1
            port: 8080
            weight: 1
      - matches:
          - path:
              type: PathPrefix
              value: /service2
        backendRefs:
          - group: ""
            kind: Service
            name: test-service-2
            port: 8080
            weight: 1
  services:
  - apiVersion: v1
    kind: Service
    metadata:
      name: test-service-1
      namespace: default
    spec:
      ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: http
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: test-service-2
      namespace: default
    spec:
      ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: http
      type: ClusterIP
expected:
  cloudEndpoints: []
  agentEndpoints:
  - apiVersion: ngrok.k8s.ngrok.com/v1alpha1
    kind: AgentEndpoint
    metadata:
      labels:
        k8s.ngrok.com/controller-name: test-manager-name
        k8s.ngrok.com/controller-namespace: test-manager-namespace
      name: e3b0c-test-service-2-default-8080
      namespace: default
    spec:
      url: "https://test-hostname.ngrok.io"
      upstream:
        url: "http://test-service-2.default:8080"
      bindings:
      - "public"
      trafficPolicy:
        inline:
          on_http_request:
            - name: Initialize-Local-Service-Match
              actions:
              - type: set-vars
                config:
                  vars:
                  - request_matched_local_svc: false
            - name: Generated-Route
              expressions:
                - "req.url.path.startsWith('/test-service-1')"
                - vars.request_matched_local_svc == false
              actions:
                - type: forward-internal
                  config:
                    url: https://e3b0c-test-service-1-default-8080.internal
            - name: Generated-Route
              expressions:
                - "req.url.path.startsWith('/service1')"
                - vars.request_matched_local_svc == false
              actions:
                - type: forward-internal
                  config:
                    url: https://e3b0c-test-service-1-default-8080.internal
            - name: Generated-Local-Service-Route
              expressions:
                - "req.url.path.startsWith('/service2')"
                - vars.request_matched_local_svc == false
              actions:
                - type: set-vars
                  config:
                    vars: 
                    - request_matched_local_svc: true
            - name: Fallback-404
              expressions:
              - vars.request_matched_local_svc == false
              actions:
              - type: custom-response
                config:
                  status_code: 404
                  content: "No route was found for this ngrok Endpoint"
                  headers:
                    content-type: text/plain
  - apiVersion: ngrok.k8s.ngrok.com/v1alpha1
    kind: AgentEndpoint
    metadata:
      labels:
        k8s.ngrok.com/controller-name: test-manager-name
        k8s.ngrok.com/controller-namespace: test-manager-namespace
      name: e3b0c-test-service-1-default-8080
      namespace: default
    spec:
      url: "https://e3b0c-test-service-1-default-8080.internal"
      upstream:
        url: "http://test-service-1.default:8080"
      bindings:
      - "internal"
