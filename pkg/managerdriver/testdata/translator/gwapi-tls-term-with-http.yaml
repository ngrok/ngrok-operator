# Tests that the following listener is ignored because it defines TLS configuration for an HTTP protocol listener
input:
  gatewayClasses:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: GatewayClass
    metadata:
      name: ngrok
    spec:
      controllerName: ngrok.com/gateway-controller
  gateways:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: Gateway
    metadata:
      name: test-gateway
      namespace: default
      annotations:
        k8s.ngrok.com/mapping-strategy: "endpoints-verbose"
    spec:
      gatewayClassName: ngrok
      listeners:
        - name: test-hostname
          hostname: "test-hostname.ngrok.io"
          port: 80
          protocol: HTTP
          tls:
            mode: Terminate
            certificateRefs:
            - kind: Secret
              name: tls-secret
            frontendValidation:
              caCertificateRefs:
              - kind: ConfigMap
                name: ca-configmap
            options:
              "k8s.ngrok.com/terminate-tls.min_version": "1.2"
              "k8s.ngrok.com/terminate-tls.max_version": "1.3"
              "k8s.ngrok.com/terminate-tls.mutual_tls_verification_strategy": "require-and-verify"
  httpRoutes:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: HTTPRoute
    metadata:
      name: test-route
      namespace: default
    spec:
      hostnames:
      - test-hostname.ngrok.io
      parentRefs:
      - group: gateway.networking.k8s.io
        kind: Gateway
        name: test-gateway
        namespace: default
      rules:
      - matches:
          - path:
              type: PathPrefix
              value: /test-service-1
        backendRefs:
          - group: ""
            kind: Service
            name: test-service-1
            port: 8080
            weight: 1
  services:
  - apiVersion: v1
    kind: Service
    metadata:
      name: test-service-1
      namespace: default
    spec:
      ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: http
      type: ClusterIP
expected:
  cloudEndpoints: []
  agentEndpoints: []
