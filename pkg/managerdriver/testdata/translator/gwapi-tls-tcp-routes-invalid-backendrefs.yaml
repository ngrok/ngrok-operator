# Tests translation for a TLSRoute and TCPRoute and TCPRoute that have invalid backend refs that should be ignored.
input:
  gatewayClasses:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: GatewayClass
    metadata:
      name: ngrok
    spec:
      controllerName: ngrok.com/gateway-controller
  gateways:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: Gateway
    metadata:
      name: tcp.ngrok.io-3
      namespace: default
    spec:
      gatewayClassName: ngrok
      addresses:
      - type: Hostname
        value: 3.tcp.ngrok.io
      listeners:
      - allowedRoutes:
          namespaces:
            from: Same
        name: test-tls
        port: 20183
        protocol: TLS
  - apiVersion: gateway.networking.k8s.io/v1
    kind: Gateway
    metadata:
      name: tcp.ngrok.io-5
      namespace: default
    spec:
      gatewayClassName: ngrok
      addresses:
      - type: Hostname
        value: 5.tcp.ngrok.io
      listeners:
      - allowedRoutes:
          namespaces:
            from: Same
        name: test-tcp
        port: 24429
        protocol: TCP
  tcpRoutes:
  - apiVersion: gateway.networking.k8s.io/v1alpha2
    kind: TCPRoute
    metadata:
      name: example
      namespace: default
    spec:
      parentRefs:
        - name: tcp.ngrok.io-5
      rules:
        - backendRefs:
            - name: test-service-tcp
              port: 7000
              kind: "foo" # Not a valid kind
            - name: test-service-foo # Service does not exist
              port: 7000
            - name: test-service-tcp
              port: 12000 # Port not valid for service
            - name: test-service-tcp # Port not specified
  tlsRoutes:
  - apiVersion: gateway.networking.k8s.io/v1alpha2
    kind: TLSRoute
    metadata:
      name: example
      namespace: default
    spec:
      parentRefs:
        - name: tcp.ngrok.io-3
      rules:
            - name: test-service-tls
              port: 9000
              kind: "foo" # Not a valid kind
            - name: test-service-foo # Service does not exist
              port: 9000
            - name: test-service-tls
              port: 12000 # Port not valid for service
            - name: test-service-tls # Port not specified
  services:
  - apiVersion: v1
    kind: Service
    metadata:
      name: test-service-tcp
      namespace: default
    spec:
      ports:
      - name: tls
        port: 7000
        protocol: TCP
        targetPort: tls
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: test-service-tls
      namespace: default
    spec:
      ports:
      - name: tls
        port: 9000
        protocol: TCP
        targetPort: tls
      type: ClusterIP
expected:
  cloudEndpoints: []
  agentEndpoints: []
