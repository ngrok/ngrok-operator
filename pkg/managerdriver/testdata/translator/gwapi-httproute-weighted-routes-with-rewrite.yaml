# Tests that gateway.spec.infrastructure adds the labels/annotations to generated resources
input:
  gatewayClasses:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: GatewayClass
    metadata:
      name: ngrok
    spec:
      controllerName: ngrok.com/gateway-controller
  gateways:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: Gateway
    metadata:
      name: test-gateway
      namespace: default
      annotations:
        k8s.ngrok.com/mapping-strategy: "endpoints"
    spec:
      gatewayClassName: ngrok
      listeners:
        - name: test-hostname
          hostname: "test-hostname.ngrok.io"
          port: 443
          protocol: HTTPS
  httpRoutes:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: HTTPRoute
    metadata:
      name: test-route
      namespace: default
    spec:
      hostnames:
      - test-hostname.ngrok.io
      parentRefs:
      - group: gateway.networking.k8s.io
        kind: Gateway
        name: test-gateway
        namespace: default
      rules:
      - matches:
          - path:
              type: PathPrefix
              value: /weighted-routes
        backendRefs:
          - group: ""
            kind: Service
            name: test-service-1
            port: 8080
            weight: 3
            filters:
            - type: URLRewrite
              urlRewrite:
                path: 
                  type: ReplacePrefixMatch
                  replacePrefixMatch: "/rewrite-svc-1"
          - group: ""
            kind: Service
            name: test-service-2
            port: 8080
            weight: 9
            filters:
            - type: URLRewrite
              urlRewrite:
                path: 
                  type: ReplacePrefixMatch
                  replacePrefixMatch: "/rewrite-svc-2"
  services:
  - apiVersion: v1
    kind: Service
    metadata:
      name: test-service-1
      namespace: default
    spec:
      ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: http
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      name: test-service-2
      namespace: default
    spec:
      ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: http
      type: ClusterIP
expected:
  cloudEndpoints:
  - apiVersion: ngrok.k8s.ngrok.com/v1alpha1
    kind: CloudEndpoint
    metadata:
      labels:
        k8s.ngrok.com/controller-name: test-manager-name
        k8s.ngrok.com/controller-namespace: test-manager-namespace
      name: test-gateway.default-test-hostname.ngrok.io
      namespace: default
    spec:
      trafficPolicy:
        policy:
            on_http_request:
            - name: Log-Request-Data
              actions:
              - type: log
                config:
                  metadata:
                    "endpoint_id": "${endpoint.id}"
                    "message": "Capturing original request data with logs before it is modified"
                    "original_headers": "${req.headers.encodeJson()}"
                    "original_path": "${req.url.path}"
                    "original_query_params": "${req.url.query_params.encodeJson()}"
            - name: Log-Random-Number
              expressions:
              - "actions.ngrok.log.metadata['original_path'].startsWith('/weighted-routes')"
              actions:
              - type: log
                config:
                  metadata:
                    "endpoint_id": "${endpoint.id}"
                    "message": "Logging random number to select weighted route and preserving captured request data"
                    "original_headers": "${req.headers.encodeJson()}"
                    "original_path": "${req.url.path}"
                    "original_query_params": "${req.url.query_params.encodeJson()}"
                    "weighted_route_random_num": "${rand.int(0,11)}"
            - name: GatewayAPI-URL-Rewrite-Filter
              expressions:
                - "actions.ngrok.log.metadata['original_path'].startsWith('/weighted-routes')"
                - "int(actions.ngrok.log.metadata['weighted_route_random_num']) <= 2"
              actions:
                - type: url-rewrite
                  config:
                    from: "^(?P<scheme>[a-zA-Z][a-zA-Z0-9+\\-.]*):\\/\\/(?P<hostname>[^\\/:]+)(?P<port>:\\d+)?(?P<prefix>\\/weighted-routes)(?P<remaining>.*)$"
                    to: "$1://$2$3/rewrite-svc-1$5"
            - name: Generated-Route
              expressions:
                - "actions.ngrok.log.metadata['original_path'].startsWith('/weighted-routes')"
                - "int(actions.ngrok.log.metadata['weighted_route_random_num']) <= 2"
              actions:
                - type: forward-internal
                  config:
                    url: "https://e3b0c-test-service-1-default-8080.internal"
            - name: GatewayAPI-URL-Rewrite-Filter
              expressions:
                - "actions.ngrok.log.metadata['original_path'].startsWith('/weighted-routes')"
                - "int(actions.ngrok.log.metadata['weighted_route_random_num']) >= 3 && int(actions.ngrok.log.metadata['weighted_route_random_num']) <= 11"
              actions:
                - type: url-rewrite
                  config:
                    from: "^(?P<scheme>[a-zA-Z][a-zA-Z0-9+\\-.]*):\\/\\/(?P<hostname>[^\\/:]+)(?P<port>:\\d+)?(?P<prefix>\\/weighted-routes)(?P<remaining>.*)$"
                    to: "$1://$2$3/rewrite-svc-2$5"
            - name: Generated-Route
              expressions:
              - "actions.ngrok.log.metadata['original_path'].startsWith('/weighted-routes')"
              - "int(actions.ngrok.log.metadata['weighted_route_random_num']) >= 3 && int(actions.ngrok.log.metadata['weighted_route_random_num']) <= 11"
              actions:
                - type: forward-internal
                  config:
                    url: "https://e3b0c-test-service-2-default-8080.internal"
            - name: Fallback-404
              actions:
              - type: custom-response
                config:
                  status_code: 404
                  content: "No route was found for this ngrok Cloud Endpoint"
                  headers:
                    content-type: text/plain
      url: https://test-hostname.ngrok.io
  agentEndpoints:
  - apiVersion: ngrok.k8s.ngrok.com/v1alpha1
    kind: AgentEndpoint
    metadata:
      labels:
        k8s.ngrok.com/controller-name: test-manager-name
        k8s.ngrok.com/controller-namespace: test-manager-namespace
      name: e3b0c-test-service-1-default-8080
      namespace: default
    spec:
      url: "https://e3b0c-test-service-1-default-8080.internal"
      upstream:
        url: "http://test-service-1.default:8080"
      bindings:
      - "internal"
  - apiVersion: ngrok.k8s.ngrok.com/v1alpha1
    kind: AgentEndpoint
    metadata:
      labels:
        k8s.ngrok.com/controller-name: test-manager-name
        k8s.ngrok.com/controller-namespace: test-manager-namespace
      name: e3b0c-test-service-2-default-8080
      namespace: default
    spec:
      url: "https://e3b0c-test-service-2-default-8080.internal"
      upstream:
        url: "http://test-service-2.default:8080"
      bindings:
      - "internal"
